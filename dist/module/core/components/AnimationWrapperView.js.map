{"version":3,"sources":["AnimationWrapperView.tsx"],"names":["React","RippleAnimationWrapper","ScaleAnimationWrapper","BounceAnimationWrapper","DraggableAnimationWrapper","FadeAnimationWrapper","SlideAnimationWrapper","WiggleAnimationWrapper","JsonAnimationWrapper","AnimationType","AnimationWrapperView","PureComponent","constructor","props","ref","_animatorRef","Children","count","children","Error","_component","_animationWrapperGenerator","animationConfig","UNSAFE_componentWillReceiveProps","nextProps","resetAnimation","startAnimation","stopAnimation","finishAnimation","render","_assertChildType","onAnimationFinish","onAnimationStart","_setRef","type","BOUNCE","RIPPLE","SCALE","DRAGGABLE","FADE_IN","FADE_OUT","SLIDE_VERTICAL","SLIDE_HORIZONTAL","WIGGLE"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {RippleAnimationWrapper} from './wrapper/RippleAnimationWrapper';\nimport {ScaleAnimationWrapper} from './wrapper/ScaleAnimationWrapper';\nimport {BounceAnimationWrapper} from './wrapper/BounceAnimationWrapper';\n\nimport BaseAnimationConfig from '../data/BaseAnimationConfig';\nimport {DraggableAnimationWrapper} from './wrapper/DraggableAnimationWrapper';\nimport {AnimationWrapperProps, WrapperComponent} from \"../Types\";\n\nimport {FadeAnimationWrapper} from './wrapper/FadeAnimationWrapper';\nimport {SlideAnimationWrapper} from './wrapper/SlideAnimationWrapper';\nimport {WiggleAnimationWrapper} from './wrapper/WiggleAnimationWrapper';\nimport {BaseAnimationWrapper} from './wrapper/BaseAnimationWrapper';\nimport {JsonAnimationWrapper} from './wrapper/JsonAnimationWrapper';\nimport {AnimationType} from '../data/Enums';\n\nexport default class AnimationWrapperView extends React.PureComponent<AnimationWrapperProps> {\n\n    private _component: WrapperComponent;\n    private _animatorRef?: BaseAnimationWrapper<AnimationWrapperProps, {}> | null;\n\n    protected constructor(props: AnimationWrapperProps) {\n        super(props);\n        this._component = AnimationWrapperView._animationWrapperGenerator(props.animationConfig);\n    }\n\n    public UNSAFE_componentWillReceiveProps(nextProps: AnimationWrapperProps): void {\n        if (this.props.animationConfig !== nextProps.animationConfig) {\n            this._animatorRef?.resetAnimation();\n            this._component = AnimationWrapperView._animationWrapperGenerator(nextProps.animationConfig);\n        }\n    }\n\n    /**\n     * This function will reset all animated timing functions associated with the current animation\n     * and start the animation from it's initial point.\n     */\n    public startAnimation(): void {\n        this._animatorRef?.startAnimation();\n    }\n\n    /**\n     * This function will stop all the Animated timing functions without resetting their values\n     * effectively pausing any applied animation when invoked.\n     */\n    public stopAnimation(): void {\n        this._animatorRef?.stopAnimation();\n    }\n\n    /**\n     * This function will clear the animation timing functions and will reset the view before\n     * any animation transformation were applied to it.\n     */\n    public resetAnimation(): void {\n        this._animatorRef?.resetAnimation();\n    }\n\n    public finishAnimation(): void {\n        this._animatorRef?.finishAnimation();\n    }\n\n    public render(): React.ReactNode | undefined {\n        this._assertChildType();\n        const {children, onAnimationFinish, onAnimationStart} = this.props;\n        const animationConfig = this.props.animationConfig;\n        if (this._component && children) {\n            return (\n                <this._component\n                    ref={this._setRef}\n                    animationConfig={animationConfig as any}\n                    onAnimationFinish={onAnimationFinish}\n                    onAnimationStart={onAnimationStart}>\n                    {children}\n                </this._component>\n            );\n        }\n\n        return;\n    }\n\n    private _setRef = (ref: Component<AnimationWrapperProps, {}, {}>) => {\n        this._animatorRef = ref as BaseAnimationWrapper<AnimationWrapperProps, {}>;\n    }\n\n    private static _animationWrapperGenerator(animationConfig: BaseAnimationConfig): WrapperComponent {\n        switch (animationConfig.type) {\n            case AnimationType.BOUNCE:\n                return BounceAnimationWrapper;\n            case AnimationType.RIPPLE:\n                return RippleAnimationWrapper;\n            case AnimationType.SCALE:\n                return ScaleAnimationWrapper;\n            case AnimationType.DRAGGABLE:\n                return DraggableAnimationWrapper;\n            case AnimationType.FADE_IN:\n            case AnimationType.FADE_OUT:\n                return FadeAnimationWrapper;\n            case AnimationType.SLIDE_VERTICAL:\n            case AnimationType.SLIDE_HORIZONTAL:\n                return SlideAnimationWrapper;\n            case AnimationType.WIGGLE:\n                return WiggleAnimationWrapper;\n            default:\n                return JsonAnimationWrapper;\n        }\n    }\n\n    private _assertChildType = (): void => {\n        if (React.Children.count(this.props.children) !== 1) {\n            throw new Error('Only one child can be passed to AnimationWrapperView');\n        }\n    };\n}\n"]}