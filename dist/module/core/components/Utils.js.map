{"version":3,"sources":["Utils.ts"],"names":["Easing","getEasingFunction","interpolation","easing","linear","quad","circle","bounce","cubic","sin","exp","ease","bounciness","params","isNaN","elastic","back"],"mappings":"AACA,SAAQA,MAAR,QAAqC,cAArC;AAEA,eAAe,SAASC,iBAAT,CAA2BC,aAA3B,EAA6E;AAAA;;AACxF,UAAQA,aAAR,aAAQA,aAAR,uBAAQA,aAAa,CAAEC,MAAvB;AACI,SAAK,QAAL;AACI,aAAOH,MAAM,CAACI,MAAd;;AACJ,SAAK,MAAL;AACI,aAAOJ,MAAM,CAACK,IAAd;;AACJ,SAAK,QAAL;AACI,aAAOL,MAAM,CAACM,MAAd;;AACJ,SAAK,QAAL;AACI,aAAON,MAAM,CAACO,MAAd;;AACJ,SAAK,OAAL;AACI,aAAOP,MAAM,CAACQ,KAAd;;AACJ,SAAK,KAAL;AACI,aAAOR,MAAM,CAACS,GAAd;;AACJ,SAAK,KAAL;AACI,aAAOT,MAAM,CAACU,GAAd;;AACJ,SAAK,MAAL;AACI,aAAOV,MAAM,CAACW,IAAd;;AACJ,SAAK,SAAL;AACI,YAAMC,UAAU,GAAGV,aAAH,aAAGA,aAAH,gDAAGA,aAAa,CAAEW,MAAlB,0DAAG,sBAAuBD,UAA1C;;AACA,UAAIA,UAAU,IAAI,CAACE,KAAK,CAACF,UAAD,CAAxB,EAAsC;AAClC,eAAOZ,MAAM,CAACe,OAAP,CAAeH,UAAf,CAAP;AACH;;AACD,aAAOZ,MAAM,CAACI,MAAd;;AACJ,SAAK,MAAL;AACI,YAAMY,IAAI,GAAGd,aAAH,aAAGA,aAAH,iDAAGA,aAAa,CAAEW,MAAlB,2DAAG,uBAAuBG,IAApC;;AACA,UAAIA,IAAI,IAAI,CAACF,KAAK,CAACE,IAAD,CAAlB,EAA0B;AACtB,eAAOhB,MAAM,CAACgB,IAAP,CAAYA,IAAZ,CAAP;AACH;;AACD,aAAOhB,MAAM,CAACI,MAAd;;AACJ;AACI,aAAOJ,MAAM,CAACI,MAAd;AA9BR;AAgCH","sourcesContent":["import {InterpolationDef} from \"../data/JsonAnimationConfig\";\nimport {Easing, EasingFunction} from \"react-native\";\n\nexport default function getEasingFunction(interpolation?: InterpolationDef): EasingFunction {\n    switch (interpolation?.easing) {\n        case \"linear\":\n            return Easing.linear;\n        case \"quad\":\n            return Easing.quad;\n        case \"circle\":\n            return Easing.circle;\n        case \"bounce\":\n            return Easing.bounce;\n        case \"cubic\":\n            return Easing.cubic;\n        case \"sin\":\n            return Easing.sin;\n        case \"exp\":\n            return Easing.exp;\n        case \"ease\":\n            return Easing.ease;\n        case \"elastic\":\n            const bounciness = interpolation?.params?.bounciness;\n            if (bounciness && !isNaN(bounciness)) {\n                return Easing.elastic(bounciness);\n            }\n            return Easing.linear;\n        case \"back\":\n            const back = interpolation?.params?.back;\n            if (back && !isNaN(back)) {\n                return Easing.back(back);\n            }\n            return Easing.linear;\n        default:\n            return Easing.linear;\n    }\n}\n"]}