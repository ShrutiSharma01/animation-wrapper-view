{"version":3,"sources":["JsonAnimationWrapper.tsx"],"names":["JsonAnimationWrapper","BaseAnimationWrapper","constructor","props","animationStarted","_compositeAnimation","reset","start","animationFinished","stop","stopAnimation","Array","isArray","animationConfig","i","length","_animation","setValue","content","transformArray","_getTransformArray","transform","undefined","animationObj","Animated","Value","push","totalAnimationValues","itr","animationSequence","animationDef","timing","toValue","duration","easing","interpolation","useNativeDriver","sequence","jsonAnimation","_transforms","animationIndex","transformations","transforms","transformIndex","_appendTransform","transformation","key","translateX","interpolate","inputRange","outputRange","from","to","translateY","scale","scaleX","scaleY","rotate","rotateX","rotateY","concat","_updateAnimatedArray","_updateCompositeAnimation","_updateTransformsArray","shouldComponentUpdate","nextProps","_","resetAnimation","getAnimationStateFromProps"],"mappings":"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","sourcesContent":["import { Animated, Easing, EasingFunction } from 'react-native';\nimport React from 'react';\nimport { BaseAnimationWrapper } from './BaseAnimationWrapper';\nimport { InterpolationDef, JsonAnimationConfig, TransformDef } from '../../data/JsonAnimationConfig';\nimport { AnimationWrapperProps } from '../../Types';\nimport getEasingFunction from \"../Utils\";\n\ninterface JsonAnimationState {\n}\n\nexport interface JsonAnimationProps extends AnimationWrapperProps {\n    animationConfig: JsonAnimationConfig\n}\n\nexport class JsonAnimationWrapper extends BaseAnimationWrapper<JsonAnimationProps, JsonAnimationState> {\n\n    private _animation: Animated.Value[] | undefined;\n    private _transforms: any[][] = [];\n    private _compositeAnimation: Animated.CompositeAnimation | undefined;\n\n    public constructor(props: JsonAnimationProps) {\n        super(props);\n        this._updateAnimatedArray(this.props);\n        this._updateCompositeAnimation(this.props);\n        this._updateTransformsArray(this.props);\n    }\n\n    public shouldComponentUpdate(nextProps: JsonAnimationProps, _: JsonAnimationState) {\n        if (this.props.animationConfig !== nextProps.animationConfig) {\n            this.resetAnimation();\n            this._updateAnimatedArray(nextProps);\n            this._updateCompositeAnimation(nextProps);\n            this._updateTransformsArray(nextProps);\n            return true;\n        }\n        return false;\n    }\n\n    public startAnimation = (): void => {\n        this.animationStarted();\n        this._compositeAnimation?.reset();\n        this._compositeAnimation?.start(() => { this.animationFinished() });\n    }\n\n    public stopAnimation = (): void => {\n        this._compositeAnimation?.stop();\n    }\n\n    public resetAnimation = (): void => {\n        this.stopAnimation();\n        if (Array.isArray(this.props.animationConfig.animationConfig)) {\n            for (let i = 0; i < this.props.animationConfig.animationConfig.length; i++) {\n                this._animation && this._animation[i] && this._animation[i].setValue(0);\n            }\n        } else {\n            this._animation && this._animation[0] && this._animation[0].setValue(0);\n        }\n    }\n\n    public finishAnimation = () => {\n        this.stopAnimation();\n        if (Array.isArray(this.props.animationConfig.animationConfig)) {\n            for (let i = 0; i < this.props.animationConfig.animationConfig.length; i++) {\n                this._animation && this._animation[i] && this._animation[i].setValue(1);\n            }\n        } else {\n            this._animation && this._animation[0] && this._animation[0].setValue(1);\n        }\n    }\n\n    protected renderAnimation = (content: React.ReactNode): React.ReactNode => {\n        const transformArray = this._getTransformArray();\n        return (\n            <Animated.View style={{ transform: transformArray }}>\n                {content}\n            </Animated.View>\n        );\n    }\n\n    protected getAnimationStateFromProps(_: JsonAnimationProps): JsonAnimationState {\n        // unused\n        return {};\n    }\n\n    private _updateAnimatedArray = (props: JsonAnimationProps): void => {\n        if (Array.isArray(props.animationConfig.animationConfig)) {\n            if (this._animation === undefined) {\n                this._animation = [];\n                for (let i = 0; i < props.animationConfig.animationConfig.length; i++) {\n                    const animationObj = new Animated.Value(0);\n                    this._animation.push(animationObj);\n                }\n                return;\n            }\n            const totalAnimationValues = props.animationConfig.animationConfig.length;\n            if (this._animation.length < totalAnimationValues) {\n                for (let itr = this._animation.length; itr < totalAnimationValues; itr++) {\n                    const animationObj = new Animated.Value(0);\n                    this._animation.push(animationObj);\n                }\n                return;\n            } else {\n                return;\n            }\n        } else {\n            if (this._animation === undefined) {\n                this._animation = [];\n                const animationObj = new Animated.Value(0);\n                this._animation.push(animationObj);\n            } else {\n                if (this._animation.length === 0) {\n                    const animationObj = new Animated.Value(0);\n                    this._animation.push(animationObj);\n                }\n            }\n        }\n        for (let i = 0; i < this._animation.length; i++) {\n            this._animation[i].setValue(0);\n        }\n    }\n\n    private _updateCompositeAnimation = (props: JsonAnimationProps): void => {\n        const animationSequence: Animated.CompositeAnimation[] = [];\n        if (Array.isArray(props.animationConfig.animationConfig)) {\n            for (let i = 0; i < props.animationConfig.animationConfig.length; i++) {\n                const animationDef = props.animationConfig.animationConfig[i];\n                if (this._animation) {\n                    animationSequence.push(Animated.timing(this._animation[i], {\n                        toValue: 1,\n                        duration: animationDef.duration,\n                        easing: getEasingFunction(animationDef.interpolation),\n                        useNativeDriver: false\n                    }));\n                }\n            }\n            this._compositeAnimation = Animated.sequence(animationSequence);\n        } else {\n            const animationDef = props.animationConfig.animationConfig;\n            if (this._animation) {\n                this._compositeAnimation = Animated.timing(this._animation[0], {\n                    toValue: 1,\n                    duration: animationDef.duration,\n                    easing: getEasingFunction(animationDef.interpolation),\n                    useNativeDriver: false\n                });\n            }\n        }\n    }\n\n    private _updateTransformsArray = (props: JsonAnimationProps) => {\n        const jsonAnimation = props.animationConfig as JsonAnimationConfig;\n        this._transforms = [];\n\n        if (Array.isArray(jsonAnimation.animationConfig)) {\n            for (let animationIndex = 0; animationIndex < jsonAnimation.animationConfig.length; animationIndex++) {\n                if (this._transforms[animationIndex] === undefined) {\n                    this._transforms[animationIndex] = [];\n                }\n                const transformations = jsonAnimation.animationConfig[animationIndex].transforms;\n                for (let transformIndex = 0; transformIndex < transformations.length; transformIndex++) {\n                    this._appendTransform(transformations, transformIndex, animationIndex);\n                }\n            }\n        } else {\n            const animationDef = jsonAnimation.animationConfig;\n            if (this._transforms[0] === undefined) {\n                this._transforms[0] = [];\n            }\n            const transformations = animationDef.transforms;\n            for (let transformIndex = 0; transformIndex < transformations.length; transformIndex++) {\n                this._appendTransform(transformations, transformIndex, 0);\n            }\n        }\n    }\n\n    private _appendTransform = (transformations: TransformDef[], transformIndex: number, animationIndex: number) => {\n        const transformation: TransformDef = transformations[transformIndex];\n        if (this._animation === undefined || this._animation[animationIndex] === undefined || this._transforms[animationIndex] === undefined) {\n\n            return;\n        }\n        switch (transformation.key) {\n            case \"translateX\":\n                const translateX = this._animation[animationIndex].interpolate({\n                    inputRange: [0, 1],\n                    outputRange: [transformation.from, transformation.to]\n                });\n                this._transforms[animationIndex].push({ translateX });\n                break;\n            case \"translateY\":\n                const translateY = this._animation[animationIndex].interpolate({\n                    inputRange: [0, 1],\n                    outputRange: [transformation.from, transformation.to]\n                });\n                this._transforms[animationIndex].push({ translateY });\n                break;\n            case \"scale\":\n                const scale = this._animation[animationIndex].interpolate({\n                    inputRange: [0, 1],\n                    outputRange: [transformation.from, transformation.to]\n                });\n                this._transforms[animationIndex].push({ scale });\n                break;\n            case \"scaleX\":\n                const scaleX = this._animation[animationIndex].interpolate({\n                    inputRange: [0, 1],\n                    outputRange: [transformation.from, transformation.to]\n                });\n                this._transforms[animationIndex].push({ scaleX });\n                break;\n            case \"scaleY\":\n                const scaleY = this._animation[animationIndex].interpolate({\n                    inputRange: [0, 1],\n                    outputRange: [transformation.from, transformation.to]\n                });\n                this._transforms[animationIndex].push({ scaleY });\n                break;\n            case \"rotate\":\n                const rotate = this._animation[animationIndex].interpolate({\n                    inputRange: [0, 1],\n                    outputRange: [`${transformation.from}deg`, `${transformation.to}deg`]\n                });\n                this._transforms[animationIndex].push({ rotate });\n                break;\n            case \"rotateX\":\n                const rotateX = this._animation[animationIndex].interpolate({\n                    inputRange: [0, 1],\n                    outputRange: [`${transformation.from}deg`, `${transformation.to}deg`]\n                });\n                this._transforms[animationIndex].push({ rotateX });\n                break;\n            case \"rotateY\":\n                const rotateY = this._animation[animationIndex].interpolate({\n                    inputRange: [0, 1],\n                    outputRange: [`${transformation.from}deg`, `${transformation.to}deg`]\n                });\n                this._transforms[animationIndex].push({ rotateY });\n                break;\n\n        }\n    }\n\n    private _getTransformArray = (): any[] => {\n\n        let transforms: any[] = [];\n        for (let i = 0; i < this._transforms.length; i++) {\n            transforms = transforms.concat(this._transforms[i]);\n        }\n        return transforms;\n    }\n\n\n}\n"]}