{"version":3,"sources":["FadeAnimationWrapper.tsx"],"names":["FadeAnimationWrapper","BaseAnimationWrapper","constructor","props","animationStarted","_fadeAnimation","reset","start","animationFinished","stop","stopAnimation","state","opacity","setValue","_getInitialOpacity","_getFinalOpacity","getAnimationStateFromProps","animationConfig","duration","toValue","type","AnimationType","FADE_IN","fadeInConfig","animationDuration","fadeOutConfig","finalOpacity","Animated","timing","easing","interpolationDef","useNativeDriver","UNSAFE_componentWillReceiveProps","nextProps","_nextContext","nextState","setState","renderAnimation","content","justifyContent","alignItems","Value","config","initialOpacity","FADE_OUT"],"mappings":"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","sourcesContent":["import { Animated } from 'react-native';\nimport React from 'react';\nimport { BaseAnimationWrapper } from './BaseAnimationWrapper';\n\nimport { FadeInAnimationConfig, FadeOutAnimationConfig } from '../../data/FadeAnimationConfig';\nimport { FadeAnimationProps } from '../../Types';\nimport { AnimationType } from '../../data/Enums';\nimport getEasingFunction from \"../Utils\";\n\ninterface FadeAnimationState {\n    opacity: Animated.Value;\n}\n\nexport interface FadeInAnimationProps extends FadeAnimationProps {\n    animationConfig: FadeInAnimationConfig;\n}\n\nexport interface FadeOutAnimationProps extends FadeAnimationProps {\n    animationConfig: FadeOutAnimationConfig;\n}\n\nexport class FadeAnimationWrapper extends BaseAnimationWrapper<FadeAnimationProps, FadeAnimationState> {\n\n    private _fadeAnimation: Animated.CompositeAnimation;\n\n    public constructor(props: FadeAnimationProps) {\n        super(props);\n        this.state = this.getAnimationStateFromProps(props);\n        const { animationConfig } = this.props;\n\n        let duration: number;\n        let toValue: number;\n\n        if (animationConfig.type === AnimationType.FADE_IN) {\n            const fadeInConfig = animationConfig as FadeInAnimationConfig;\n            duration = fadeInConfig.animationDuration;\n            toValue = 1;\n        } else {\n            const fadeOutConfig = animationConfig as FadeOutAnimationConfig;\n            duration = fadeOutConfig.animationDuration;\n            toValue = fadeOutConfig.finalOpacity ? fadeOutConfig.finalOpacity : 0;\n        }\n\n        this._fadeAnimation = Animated.timing(this.state.opacity, {\n            duration: duration,\n            toValue: toValue,\n            easing: getEasingFunction(animationConfig.interpolationDef),\n            useNativeDriver: false\n        });\n    }\n\n    public UNSAFE_componentWillReceiveProps(nextProps: FadeAnimationProps, _nextContext: any): void {\n        if (nextProps !== this.props) {\n            const nextState: FadeAnimationState | null = this.getAnimationStateFromProps(nextProps);\n            if (null != nextState) {\n                this.setState(nextState);\n            }\n        }\n    }\n\n    public startAnimation = () => {\n        this.animationStarted();\n        this._fadeAnimation.reset();\n        this._fadeAnimation.start(() => { this.animationFinished() });\n    }\n\n    public stopAnimation = () => {\n        this._fadeAnimation.stop();\n    }\n\n    public resetAnimation = () => {\n        this.stopAnimation();\n        this.state.opacity.setValue(this._getInitialOpacity(this.props));\n    }\n\n\n    public finishAnimation = () => {\n        this.stopAnimation();\n        this.state.opacity.setValue(this._getFinalOpacity(this.props));\n    }\n\n    protected renderAnimation(content: React.ReactNode): React.ReactNode {\n        const opacity = this.state.opacity;\n\n        return (\n            <Animated.View\n                style={{\n                    justifyContent: 'center',\n                    alignItems: 'center',\n                    opacity\n                }}>\n                {content}\n            </Animated.View>\n        );\n    }\n\n    protected getAnimationStateFromProps(props: FadeAnimationProps): FadeAnimationState {\n        return {\n            opacity: new Animated.Value(this._getInitialOpacity(props))\n        }\n    }\n\n    private _getInitialOpacity(props: FadeAnimationProps): number {\n        if (props.animationConfig.type === AnimationType.FADE_IN) {\n            const config = props.animationConfig as FadeInAnimationConfig;\n            return config.initialOpacity ? config.initialOpacity : 0;\n        } else {\n            return 1;\n        }\n    }\n\n    private _getFinalOpacity(props: FadeAnimationProps): number {\n        if (props.animationConfig.type === AnimationType.FADE_OUT) {\n            const config = props.animationConfig as FadeOutAnimationConfig;\n            return config.finalOpacity ? config.finalOpacity : 0;\n        } else {\n            return 1;\n        }\n    }\n}\n"]}